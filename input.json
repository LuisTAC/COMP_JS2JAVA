{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "def"
            },
            "params": [],
            "defaults": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "arr"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "1"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": 3.5,
                                            "raw": "3.5"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": 2,
                                            "raw": "2"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "i"
                                },
                                "init": {
                                    "type": "UnaryExpression",
                                    "operator": "-",
                                    "argument": {
                                        "type": "Literal",
                                        "value": 3,
                                        "raw": "3"
                                    },
                                    "prefix": true
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ForStatement",
                        "init": {
                            "type": "VariableDeclaration",
                            "declarations": [
                                {
                                    "type": "VariableDeclarator",
                                    "id": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "init": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0"
                                    }
                                }
                            ],
                            "kind": "var"
                        },
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "<",
                            "left": {
                                "type": "Identifier",
                                "name": "i"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 10,
                                "raw": "10"
                            }
                        },
                        "update": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                                "type": "Identifier",
                                "name": "i"
                            },
                            "prefix": false
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "foo"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "arr"
                                            },
                                            {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 9,
                                                        "raw": "9"
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": false,
                                                        "raw": "false"
                                                    },
                                                    "prefix": true
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "AssignmentExpression",
                            "operator": "%=",
                            "left": {
                                "type": "Identifier",
                                "name": "i"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 3,
                                "raw": "3"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UpdateExpression",
                                        "operator": "++",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "prefix": false
                                    }
                                }
                            ]
                        },
                        "alternate": {
                            "type": "VariableDeclaration",
                            "declarations": [
                                {
                                    "type": "VariableDeclarator",
                                    "id": {
                                        "type": "Identifier",
                                        "name": "str"
                                    },
                                    "init": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "arr"
                                        },
                                        "property": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": 1,
                                                "raw": "1"
                                            }
                                        }
                                    }
                                }
                            ],
                            "kind": "var"
                        }
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "Literal",
                            "value": false,
                            "raw": "false"
                        },
                        "body": {
                            "type": "ExpressionStatement",
                            "expression": {
                                "type": "UpdateExpression",
                                "operator": "--",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "i"
                                },
                                "prefix": false
                            }
                        }
                    },
                    {
                        "type": "ForInStatement",
                        "left": {
                            "type": "Identifier",
                            "name": "num"
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "arr"
                        },
                        "body": {
                            "type": "ExpressionStatement",
                            "expression": {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "num"
                                },
                                "prefix": false
                            }
                        },
                        "each": false
                    },
                    {
                        "type": "DoWhileStatement",
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "a"
                                            },
                                            "init": {
                                                "type": "Literal",
                                                "value": 2,
                                                "raw": "2"
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "c"
                                            },
                                            "init": {
                                                "type": "Literal",
                                                "value": 3,
                                                "raw": "3"
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                }
                            ]
                        },
                        "test": {
                            "type": "BinaryExpression",
                            "operator": ">",
                            "left": {
                                "type": "Identifier",
                                "name": "a"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "Identifier",
                                "name": "str"
                            },
                            "right": {
                                "type": "Literal",
                                "value": "",
                                "raw": "\"\""
                            }
                        }
                    },
                    {
                        "type": "SwitchStatement",
                        "discriminant": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "arr"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                            }
                        },
                        "cases": [
                            {
                                "type": "SwitchCase",
                                "test": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "1"
                                },
                                "consequent": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "str"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "lol",
                                                "raw": "\"lol\""
                                            }
                                        }
                                    },
                                    {
                                        "type": "BreakStatement",
                                        "label": null
                                    }
                                ]
                            },
                            {
                                "type": "SwitchCase",
                                "test": {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "2"
                                },
                                "consequent": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "str"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "nopes",
                                                "raw": "\"nopes\""
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "+=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "str"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "kkkk",
                                                "raw": "\"kkkk\""
                                            }
                                        }
                                    },
                                    {
                                        "type": "BreakStatement",
                                        "label": null
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "Identifier",
                            "name": "str"
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false
        }
    ],
    "sourceType": "script"
}