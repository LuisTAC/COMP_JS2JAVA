parser grammar JS2JAVAParser;

options {
	tokenVocab = JS2JAVALexer;
}

json :
   OPENBRACES TYPE TWOPOINTS PROGRAM COMMA
   BODY TWOPOINTS OPENBRACKETS (obj (COMMA obj)*)? CLOSEBRACKETS COMMA
   SOURCETYPE TWOPOINTS SCRIPT
   ;

obj :
	vardecobj
	| funcdecobj
	| forstmt
	| blockstmt
	| expression
	;

vardecobj :
	OPENBRACES
	TYPE TWOPOINTS VARDEC COMMA
	declarations COMMA
	KIND TWOPOINTS VAR
	CLOSEBRACES
	;
	
funcdecobj :
	OPENBRACES
	TYPE TWOPOINTS FUNCDEC COMMA
	id COMMA
	params COMMA
	defaults COMMA
	BODY TWOPOINTS blockstmt COMMA
	GENERATOR TWOPOINTS (TRUE|FALSE) COMMA
	EXPRESSION TWOPOINTS (TRUE|FALSE)
	CLOSEBRACES
	;

//var decs	
declarations :
	DECLARATIONS TWOPOINTS 
	OPENBRACKETS OPENBRACES 
	variableDeclarator
	CLOSEBRACES CLOSEBRACKETS
	;
	
variableDeclarator :
	TYPE TWOPOINTS VARDECTOR COMMA
	id COMMA
	init
	;

//func decs
params :
	PARAMS TWOPOINTS
	OPENBRACKETS
	(id2 (COMMA id2)*)? 
	CLOSEBRACKETS
	;

defaults :
	DEFAULTS TWOPOINTS 
	OPENBRACKETS
	(expression (COMMA expression)*)?
	CLOSEBRACKETS
	;

init_for :
	NULL
	|vardecobj
	;
		
forstmt : 
	OPENBRACES
	TYPE TWOPOINTS FORSTMT COMMA
	INIT TWOPOINTS init_for COMMA
	TEST TWOPOINTS (NULL|expression) COMMA
	UPDATE TWOPOINTS (NULL|expression) COMMA
	BODY TWOPOINTS blockstmt
	CLOSEBRACES
	;

blockstmt :
	OPENBRACES
	TYPE TWOPOINTS BLOCKSTMT COMMA
	BODY TWOPOINTS OPENBRACKETS
	(body_elmt (COMMA body_elmt)*)?
	CLOSEBRACKETS 
	CLOSEBRACES
	;

body_elmt :
	vardecobj
	| funcdecobj
	| forstmt
	;

init :
	INIT TWOPOINTS 
	(literal|binaryex|id2)
	;
	
literal : 
	OPENBRACES
	TYPE TWOPOINTS LITERAL COMMA
	VALUE TWOPOINTS (NUMBER|NULL|STRING|TRUE|FALSE) COMMA
	RAW TWOPOINTS STRING
	CLOSEBRACES
	;
	
binaryex :
	OPENBRACES
	TYPE TWOPOINTS BINARYEX COMMA
	OPERATOR TWOPOINTS (ADD|SUB|MUL|DIV|REM|EQUAL|NEQUAL|SMALLER|SMALLEREQ|BIGGER|BIGGEREQ) COMMA
	LEFT TWOPOINTS (expression|id2) COMMA
	RIGHT TWOPOINTS literal
	CLOSEBRACES
	;

updateex :
	OPENBRACES
	TYPE TWOPOINTS UPDATEEX COMMA
	OPERATOR TWOPOINTS (INC|DEC) COMMA
	ARGUMENT TWOPOINTS id2 COMMA
	PREFIX TWOPOINTS (TRUE|FALSE)
	CLOSEBRACES
	;

expression :
	literal
	| binaryex
	| updateex
	| NULL
	;

id : 
	ID TWOPOINTS id2
	;

id2 :
	OPENBRACES
	TYPE TWOPOINTS IDENTIFIER COMMA
	NAME TWOPOINTS STRING
	CLOSEBRACES
	;
	
