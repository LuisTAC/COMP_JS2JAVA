{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "def"
            },
            "params": [],
            "defaults": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "j"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 10,
                                    "raw": "10"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "array"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "DoWhileStatement",
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "array"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "push"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "boa",
                                                "raw": "\"boa\""
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UpdateExpression",
                                        "operator": "--",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "j"
                                        },
                                        "prefix": false
                                    }
                                }
                            ]
                        },
                        "test": {
                            "type": "BinaryExpression",
                            "operator": ">",
                            "left": {
                                "type": "Identifier",
                                "name": "j"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 5,
                                "raw": "5"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false
        }
    ],
    "sourceType": "script"
}